
from .base_room import BaseRoom

class MalwareLabRoom(BaseRoom):
    def __init__(self, start_pid = 132):
        desc = (
            f"A process tree is stored in proc_tree.jsonl. "
            f"start your trace from PID {start_pid} and find a path that ends with an "
            "exfil command (curl or scp)."
        )
        super().__init__("Malware lab", desc , ["proc_trees.jsonl"])
        self.start_pid = start_pid
        
    def _is_exfil(self, cmd: str) -> bool: 
        if not cmd:
            return False
        lower = cmd.lower()
        return "curl" in lower or "scp" in lower
    
    def _parse_json(self, path):
        """"
        Parse a JSON-lines file containing process information.
        Returns:
            tuple: (records_list, skipped_count, error_message)
                   -records_list: list of dicts with 'pid', 'ppid', 'cmd'
                   -skipped_count: number of malformed lines
                   -error_message: None if successful, error string if file missing
                   
        """
        records = []
        skipped = 0
        
        
        
    
        